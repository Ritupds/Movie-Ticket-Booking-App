{"ast":null,"code":"import axios from 'axios';\n\n//   import axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    login() {\n      const adminEmail = this.email;\n      const adminPassword = this.password;\n      if (this.email === adminEmail && this.password === adminPassword) {\n        // If the login is successful, redirect to the admin dashboard or display a success message.\n        this.$router.push({\n          name: \"AdminDashboard\"\n        }); // Replace \"AdminDashboard\" with the actual route name of your admin dashboard.\n      } else {\n        this.error = \"Invalid username or password.\";\n      }\n    },\n    navigateToRegister() {\n      this.$router.push('/adminregister'); // Navigate to the registration page\n    }\n  },\n\n  created() {\n    if (localStorage.getItem('access_token')) {\n      axios.get('http://127.0.0.1:5000/check_login', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.is_admin === true) {\n            this.$router.push('/admindashboard');\n          } else {\n            this.$router.push('/userdashboard');\n          }\n        }\n      }).catch(error => {\n        localStorage.removeItem('access_token');\n        console.error(error);\n      });\n    } else {\n      localStorage.removeItem('access_token');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","methods","login","adminEmail","adminPassword","$router","push","name","error","navigateToRegister","created","localStorage","getItem","get","headers","Authorization","then","response","status","is_admin","catch","removeItem","console"],"sources":["src/components/AdminLogin.vue"],"sourcesContent":["<template>\r\n    <div class=\"admin-login\">\r\n      <h1>Admin Login</h1>\r\n      <form @submit.prevent=\"login\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Email</label>\r\n          <input type=\"text\" id=\"email\" v-model=\"email\" class=\"form-control\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" class=\"form-control\" required>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n      </form>\r\n\r\n      <br><br>\r\n      <button @click=\"navigateToRegister\">Register</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\nimport axios from 'axios';\r\n\r\n//   import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        email: '',\r\n        password: '',\r\n      };\r\n    },\r\n    methods: {\r\n      login() {\r\n        const adminEmail = this.email;\r\n        const adminPassword = this.password;\r\n\r\n        if (this.email === adminEmail && this.password === adminPassword) {\r\n        // If the login is successful, redirect to the admin dashboard or display a success message.\r\n        this.$router.push({ name: \"AdminDashboard\" }); // Replace \"AdminDashboard\" with the actual route name of your admin dashboard.\r\n      } else {\r\n        this.error = \"Invalid username or password.\";\r\n      }\r\n    },\r\n    navigateToRegister() {\r\n      this.$router.push('/adminregister'); // Navigate to the registration page\r\n    },\r\n  },\r\n  created(){\r\n    if (localStorage.getItem('access_token')) {\r\n      axios\r\n        .get('http://127.0.0.1:5000/check_login',{\r\n          headers: {\r\n            Authorization: 'Bearer ' + localStorage.getItem('access_token')\r\n          }\r\n        })\r\n        .then((response)=> {\r\n          if (response.status==200){\r\n            if (response.data.is_admin === true) {\r\n              this.$router.push('/admindashboard');\r\n            } \r\n            else {\r\n              this.$router.push('/userdashboard');\r\n            }\r\n          }\r\n        })\r\n        .catch((error)=>{\r\n          localStorage.removeItem('access_token');\r\n          console.error(error);\r\n        });\r\n      } else{\r\n        localStorage.removeItem('access_token');\r\n      }\r\n\r\n\r\n      }  \r\n        }\r\n\r\n  </script>\r\n  \r\n "],"mappings":"AAqBA,OAAAA,KAAA;;AAEA;;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAA;MACA,MAAAC,UAAA,QAAAJ,KAAA;MACA,MAAAK,aAAA,QAAAJ,QAAA;MAEA,SAAAD,KAAA,KAAAI,UAAA,SAAAH,QAAA,KAAAI,aAAA;QACA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAAC,IAAA;QAAA;MACA;QACA,KAAAC,KAAA;MACA;IACA;IACAC,mBAAA;MACA,KAAAJ,OAAA,CAAAC,IAAA;IACA;EACA;;EACAI,QAAA;IACA,IAAAC,YAAA,CAAAC,OAAA;MACAf,KAAA,CACAgB,GAAA;QACAC,OAAA;UACAC,aAAA,cAAAJ,YAAA,CAAAC,OAAA;QACA;MACA,GACAI,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAC,MAAA;UACA,IAAAD,QAAA,CAAAnB,IAAA,CAAAqB,QAAA;YACA,KAAAd,OAAA,CAAAC,IAAA;UACA,OACA;YACA,KAAAD,OAAA,CAAAC,IAAA;UACA;QACA;MACA,GACAc,KAAA,CAAAZ,KAAA;QACAG,YAAA,CAAAU,UAAA;QACAC,OAAA,CAAAd,KAAA,CAAAA,KAAA;MACA;IACA;MACAG,YAAA,CAAAU,UAAA;IACA;EAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}