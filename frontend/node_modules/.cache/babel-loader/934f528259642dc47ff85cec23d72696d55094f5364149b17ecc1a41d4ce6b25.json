{"ast":null,"code":"import axios from 'axios';\n\n//   import axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    login() {\n      axios.post('/admin_login', {\n        email: this.email,\n        password: this.password\n      }).then(response => {\n        const accessToken = response.data.access_token;\n        // Store the access token in local storage or Vuex store\n        localStorage.setItem('access_token', accessToken);\n        // Optionally, you can redirect the user to their dashboard\n        // this.$router.push('/dashboard');\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    navigateToRegister() {\n      this.$router.push('/adminregister'); // Navigate to the registration page\n    }\n  },\n\n  created() {\n    if (localStorage.getItem('access_token')) {\n      axios.get('http://127.0.0.1:5000/check_login', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.is_admin === true) {\n            this.$router.push('/admindashboard');\n          } else {\n            this.$router.push('/userdashboard');\n          }\n        }\n      }).catch(error => {\n        localStorage.removeItem('access_token');\n        console.error(error);\n      });\n    } else {\n      localStorage.removeItem('access_token');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","methods","login","post","then","response","accessToken","access_token","localStorage","setItem","catch","error","console","navigateToRegister","$router","push","created","getItem","get","headers","Authorization","status","is_admin","removeItem"],"sources":["src/components/AdminLogin.vue"],"sourcesContent":["<template>\r\n    <div class=\"admin-login\">\r\n      <h1>Admin Login</h1>\r\n      <form @submit.prevent=\"login\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Email</label>\r\n          <input type=\"text\" id=\"email\" v-model=\"email\" class=\"form-control\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" class=\"form-control\" required>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n      </form>\r\n\r\n      <br><br>\r\n      <button @click=\"navigateToRegister\">Register</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\nimport axios from 'axios';\r\n\r\n//   import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        email: '',\r\n        password: '',\r\n      };\r\n    },\r\n    methods: {\r\n      login() {\r\n        axios\r\n        .post('/admin_login', {\r\n          email: this.email,\r\n          password: this.password,\r\n        })\r\n        .then(response => {\r\n          const accessToken = response.data.access_token;\r\n          // Store the access token in local storage or Vuex store\r\n          localStorage.setItem('access_token', accessToken);\r\n          // Optionally, you can redirect the user to their dashboard\r\n          // this.$router.push('/dashboard');\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    navigateToRegister() {\r\n      this.$router.push('/adminregister'); // Navigate to the registration page\r\n    },\r\n  },\r\n  created(){\r\n    if (localStorage.getItem('access_token')) {\r\n      axios\r\n        .get('http://127.0.0.1:5000/check_login',{\r\n          headers: {\r\n            Authorization: 'Bearer ' + localStorage.getItem('access_token')\r\n          }\r\n        })\r\n        .then((response)=> {\r\n          if (response.status==200){\r\n            if (response.data.is_admin === true) {\r\n              this.$router.push('/admindashboard');\r\n            } \r\n            else {\r\n              this.$router.push('/userdashboard');\r\n            }\r\n          }\r\n        })\r\n        .catch((error)=>{\r\n          localStorage.removeItem('access_token');\r\n          console.error(error);\r\n        });\r\n      } else{\r\n        localStorage.removeItem('access_token');\r\n      }\r\n\r\n\r\n      }  \r\n        }\r\n\r\n  </script>\r\n  \r\n "],"mappings":"AAqBA,OAAAA,KAAA;;AAEA;;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAA;MACAL,KAAA,CACAM,IAAA;QACAJ,KAAA,OAAAA,KAAA;QACAC,QAAA,OAAAA;MACA,GACAI,IAAA,CAAAC,QAAA;QACA,MAAAC,WAAA,GAAAD,QAAA,CAAAP,IAAA,CAAAS,YAAA;QACA;QACAC,YAAA,CAAAC,OAAA,iBAAAH,WAAA;QACA;QACA;MACA,GACAI,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACAE,mBAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;;EACAC,QAAA;IACA,IAAAR,YAAA,CAAAS,OAAA;MACApB,KAAA,CACAqB,GAAA;QACAC,OAAA;UACAC,aAAA,cAAAZ,YAAA,CAAAS,OAAA;QACA;MACA,GACAb,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAgB,MAAA;UACA,IAAAhB,QAAA,CAAAP,IAAA,CAAAwB,QAAA;YACA,KAAAR,OAAA,CAAAC,IAAA;UACA,OACA;YACA,KAAAD,OAAA,CAAAC,IAAA;UACA;QACA;MACA,GACAL,KAAA,CAAAC,KAAA;QACAH,YAAA,CAAAe,UAAA;QACAX,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;MACAH,YAAA,CAAAe,UAAA;IACA;EAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}