{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      token: \"\",\n      formData: {\n        show_id: '',\n        number_of_seats: 1 // Default value\n      },\n\n      shows: [],\n      // Populate with available shows from your API\n      message: ''\n    };\n  },\n  computed: {\n    axiosConfig() {\n      let token = localStorage.getItem(\"access_token\");\n      return {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n    }\n  },\n  methods: {\n    bookShow() {\n      const path = \"http://127.0.0.1:5000/bookings\";\n      axios.post(path, this.axiosConfig) // Use the appropriate route for booking creation\n      .then(response => {\n        this.message = response.data.message;\n      }).catch(error => {\n        this.message = error.response.data.message;\n      });\n    }\n  },\n  mounted() {\n    // Fetch available shows from your Flask API and populate this.shows\n    axios.get('http://127.0.0.1:5000/admindashboard/shows') // Use the appropriate route for fetching shows\n    .then(response => {\n      this.shows = response.data.shows;\n    }).catch(error => {\n      console.error('Error fetching shows:', error);\n    });\n  },\n  created() {\n    let token = localStorage.getItem(\"access_token\");\n    if (token == null) {\n      this.$router.push(\"/user_login\");\n    }\n  }\n};","map":{"version":3,"names":["axios","data","token","formData","show_id","number_of_seats","shows","message","computed","axiosConfig","localStorage","getItem","headers","Authorization","methods","bookShow","path","post","then","response","catch","error","mounted","get","console","created","$router","push"],"sources":["src/components/BookShow.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\n    <div class=\"container\">\r\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/cosmo/bootstrap.min.css\" integrity=\"sha384-5QFXyVb+lrCzdN228VS3HmzpiE7ZVwLQtkt+0d9W43LQMzz4HBnnqvVxKg6O+04d\" crossorigin=\"anonymous\">\r\n    <h1>Booking Form</h1>\r\n    <form @submit.prevent=\"bookShow\">\r\n      <label for=\"show_id\">Select a Show:</label>\r\n      <select v-model=\"formData.show_id\" required>\r\n        <!-- Populate this dropdown with available shows from your database -->\r\n        <option v-for=\"show in shows\" :key=\"show.id\" :value=\"show.id\">{{ show.show_name }}</option>\r\n      </select>\r\n      <br>\r\n\r\n      <label for=\"number_of_seats\">Number of Seats:</label>\r\n      <input type=\"number\" v-model=\"formData.number_of_seats\" required>\r\n      <br>\r\n\r\n      <button type=\"submit\">Book</button>\r\n    </form>\r\n    <div id=\"message\">{{ message }}</div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      token:\"\",\r\n      formData: {\r\n        show_id: '',\r\n        number_of_seats: 1, // Default value\r\n      },\r\n      shows: [], // Populate with available shows from your API\r\n      message: '',\r\n    };\r\n  },\r\n  computed:{\r\n    axiosConfig(){\r\n      let token = localStorage.getItem(\"access_token\");\r\n      return {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    bookShow() {\r\n      const path=\"http://127.0.0.1:5000/bookings\"\r\n      axios\r\n        .post(path,this.axiosConfig) // Use the appropriate route for booking creation\r\n        .then((response) => {\r\n          this.message = response.data.message;\r\n        })\r\n        .catch((error) => {\r\n          this.message = error.response.data.message;\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    // Fetch available shows from your Flask API and populate this.shows\r\n    axios.get('http://127.0.0.1:5000/admindashboard/shows') // Use the appropriate route for fetching shows\r\n      .then((response) => {\r\n        this.shows = response.data.shows;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching shows:', error);\r\n      });\r\n  },\r\n  created() {\r\n    let token = localStorage.getItem(\"access_token\");\r\n    if (token == null){\r\n      this.$router.push(\"/user_login\");\r\n    } \r\n    \r\n  },\r\n};\r\n</script>"],"mappings":"AA0BA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;QACAC,OAAA;QACAC,eAAA;MACA;;MACAC,KAAA;MAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAA;MACA,IAAAP,KAAA,GAAAQ,YAAA,CAAAC,OAAA;MACA;QACAC,OAAA;UACAC,aAAA,YAAAX,KAAA;QACA;MACA;IACA;EACA;EACAY,OAAA;IACAC,SAAA;MACA,MAAAC,IAAA;MACAhB,KAAA,CACAiB,IAAA,CAAAD,IAAA,OAAAP,WAAA;MAAA,CACAS,IAAA,CAAAC,QAAA;QACA,KAAAZ,OAAA,GAAAY,QAAA,CAAAlB,IAAA,CAAAM,OAAA;MACA,GACAa,KAAA,CAAAC,KAAA;QACA,KAAAd,OAAA,GAAAc,KAAA,CAAAF,QAAA,CAAAlB,IAAA,CAAAM,OAAA;MACA;IACA;EACA;EACAe,QAAA;IACA;IACAtB,KAAA,CAAAuB,GAAA;IAAA,CACAL,IAAA,CAAAC,QAAA;MACA,KAAAb,KAAA,GAAAa,QAAA,CAAAlB,IAAA,CAAAK,KAAA;IACA,GACAc,KAAA,CAAAC,KAAA;MACAG,OAAA,CAAAH,KAAA,0BAAAA,KAAA;IACA;EACA;EACAI,QAAA;IACA,IAAAvB,KAAA,GAAAQ,YAAA,CAAAC,OAAA;IACA,IAAAT,KAAA;MACA,KAAAwB,OAAA,CAAAC,IAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}